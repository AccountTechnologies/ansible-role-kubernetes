---
- name: test
  debug:
    var: kubernetes_install_only

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"
  when: kubernetes_install_only is not defined or kubernetes_install_only == true

- name: setup-RedHat.yml
  include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat' and (kubernetes_install_only is not defined or kubernetes_install_only == true)

- name: setup-Debian.yml
  include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian' and (kubernetes_install_only is not defined or kubernetes_install_only == true)

- name: Ensure dependencies are installed (curl).
  package: name=curl state=present
  when: kubernetes_install_only is not defined or kubernetes_install_only == true
  become: yes

- name: Install Kubernetes packages.
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ kubernetes_packages | json_query(\"[?name=='kubeadm']\")  }}"
  when: kubernetes_install_only is not defined or kubernetes_install_only == true
  become: yes

- name: install longhorn longhorn-node-setup.yml
  include_tasks: longhorn-node-setup.yml
  when: kubernetes_install_longhorn is defined and kubernetes_install_only is not defined

- name: Install Kubernetes packages.
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  notify: restart kubelet
  with_items: "{{ kubernetes_packages }}"
  when: kubernetes_install_only is not defined
  become: yes

- name: kubelet-setup.yml
  include_tasks: kubelet-setup.yml
  when: kubernetes_install_only is not defined

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true
  when: kubernetes_install_only is not defined
  become: yes 
  
- name: Get current cluster state
  include_tasks: find-cluster-state.yml
  #when: (kubernetes_install_only is not defined) 
  when: inventory_hostname in groups['clusters'] and kubernetes_install_only is not defined

- name: Get k_master
  debug:
    var: kubernetes_kubelet_extra_args 
  when: kubernetes_install_only is not defined

- name: Get k_master
  debug:
    var: k_master 
  when: kubernetes_install_only is not defined

- name: Get k_master_state
  debug:
    var: k_master_state
  when: kubernetes_install_only is not defined

- name: Set the kubeadm kubernetes_master_node globally.
  set_fact:
    kubernetes_master_node: "{{ k_master }}"
  when: kubernetes_install_only is not defined

- name: Set the kubeadm kubernetes_master_node_state globally.
  set_fact:
    kubernetes_master_node_state: "{{ k_master_state }}"
  when: kubernetes_install_only is not defined

- name: Get kubernetes_master_node
  debug:
    var: kubernetes_master_node 

# Set up master.
- name: master-setup.yml
  include_tasks: master-setup.yml
  when: kubernetes_role == 'master' and (kubernetes_install_only is not defined) 
        and ( inventory_hostname == kubernetes_master_node )
        and (kubernetes_master_node_state != 'ready')

# Set up nodes.
- name: Get the kubernetes_master_node Kubernetes master.
  command: kubeadm token create --print-join-command
  changed_when: false
  when: kubernetes_role == 'master' and (kubernetes_install_only is not defined) 
        and inventory_hostname == kubernetes_master_node
  register: kubernetes_join_command_result

- name: Set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: "{{ kubernetes_join_command_result.stdout }}"
  when: kubernetes_join_command_result.stdout is defined  and (kubernetes_install_only is not defined)
          and hostvars[item]['k_master'] is defined
          and hostvars[item]['k_master'] == inventory_hostname
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['clusters'] }}"

- name: what is role
  debug:
    var: kubernetes_role

- name: master-node-setup.yml
  include_tasks: master-node-setup.yml
  when: kubernetes_role == 'master'  and (kubernetes_install_only is not defined) and inventory_hostname != kubernetes_master_node

- name: node-setup.yml
  include_tasks: node-setup.yml
  when: kubernetes_role == 'node'  and (kubernetes_install_only is not defined) and k_master_state_self != "ready"
