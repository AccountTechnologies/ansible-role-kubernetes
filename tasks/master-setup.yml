---

- name: Initialize Kubernetes master with kubeadm init.
  command: >
    kubeadm init 
    --pod-network-cidr={{ kubernetes_pod_network_cidr }}
    --apiserver-advertise-address={{hostvars[inventory_hostname].internal_network_ip}}
    --control-plane-endpoint={{ kubernetes_master_vip }}:6443
    --kubernetes-version={{ kubernetes_version_kubeadm }}
    --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }}
    --upload-certs
    {{ kubernetes_kubeadm_init_extra_opts }}
  register: results

- name: write-key-file
  copy: 
    content: "{{ results.stdout | regex_search('(?:--certificate-key) (?:)(.{1,})' | string) | regex_replace('--certificate-key ','') }}"
    dest: "{{ kubernetes_secrets_dir }}{{kubernetes_cluster_name}}_cert_key.key"
  delegate_to: 127.0.0.1

- name: read aconfig
  shell: cat /etc/kubernetes/admin.conf
  register: admin_conf
  become: yes
  when: inventory_hostname in groups['kubernetes-master']

  
- name: write-key-file
  copy: 
    content: "{{ admin_conf.stdout }}"
    dest: "{{ kubernetes_secrets_dir }}{{kubernetes_cluster_name}}_config"
  delegate_to: 127.0.0.1
  when: admin_conf is defined and inventory_hostname in groups['kubernetes-master']

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link

# - name: debug results
#   debug:
#     var: results

# - fail:
#     msg: Just failing because.
#   when: results is defined

- name: Configure Post Init YAML networking.
  command: "kubectl apply -f {{ item.local_address }}"
  with_items:
    - "{{ kuberbetes_yaml }}"
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"

# TODO: Check if taint exists with something like `kubectl describe nodes`
# instead of using kubernetes_init_stat.stat.exists check.
- name: Allow pods on master node (if configured).
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  when:
    - kubernetes_allow_pods_on_master | bool
    - not kubernetes_init_stat.stat.exists

- name: Check if Kubernetes Dashboard UI service already exists.
  shell: kubectl get services --namespace kube-system | grep -q kubernetes-dashboard
  changed_when: false
  failed_when: false
  register: kubernetes_dashboard_service
  when: kubernetes_enable_web_ui | bool

- name: Enable the Kubernetes Web Dashboard UI (if configured).
  command: "kubectl create -f {{ kubernetes_web_ui_manifest_file }}"
  when:
    - kubernetes_enable_web_ui | bool
    - kubernetes_dashboard_service is failed

- name: Configure Post Init Commands networking.
  command: "{{ item.command }}"
  with_items:
    - "{{ kuberbetes_commands }}"

- name: Wait for cluster ready
  shell: kubectl get nodes | awk $2 -F ' ' 'NR>1{print $2}'
  register: result
  until: result.stdout.find("Ready") != -1
  retries: 5
  delay: 20
